"use strict";(self.webpackChunkctic=self.webpackChunkctic||[]).push([[3596],{40584:function(r,a,t){t.r(a),t.d(a,{default:function(){return w}});t(72791);var n=t(19913),e=t(99607),i=t(57702),s=t(90466),o=t(12891),h=t(93137),d=(0,e.z)({chartName:"BarChart",GraphicalChild:i.$,defaultTooltipEventType:"axis",validateTooltipEventTypes:["axis","item"],axisComponents:[{axisType:"xAxis",AxisComp:s.K},{axisType:"yAxis",AxisComp:o.B}],formatAxisMap:h.t9}),m=t(82839),p=t(35667),x=t(27281),l=[{name:"Page A",uv:4e3,pv:2400,amt:2400},{name:"Page B",uv:3e3,pv:1398,amt:2210},{name:"Page C",uv:2e3,pv:9800,amt:2290},{name:"Page D",uv:2780,pv:3908,amt:2e3},{name:"Page E",uv:1890,pv:4800,amt:2181},{name:"Page F",uv:2390,pv:3800,amt:2500},{name:"Page G",uv:3490,pv:4300,amt:2100}],c=t(80184),v=function(){return(0,c.jsx)(n.h,{width:"100%",height:200,children:(0,c.jsxs)(d,{data:l,margin:{top:10,right:0,left:-25,bottom:0},children:[(0,c.jsx)(s.K,{dataKey:"name"}),(0,c.jsx)(o.B,{}),(0,c.jsx)(m.q,{strokeDasharray:"3 3"}),(0,c.jsx)(p.u,{}),(0,c.jsx)(x.D,{}),(0,c.jsx)(i.$,{dataKey:"pv",fill:"#4299E1"}),(0,c.jsx)(i.$,{dataKey:"uv",fill:"#F04F47"})]})})},g=function(){return(0,c.jsx)(n.h,{width:"100%",height:200,children:(0,c.jsxs)(d,{data:l,margin:{top:10,right:0,left:-25,bottom:0},children:[(0,c.jsx)(s.K,{dataKey:"name"}),(0,c.jsx)(o.B,{}),(0,c.jsx)(m.q,{strokeDasharray:"3 3"}),(0,c.jsx)(p.u,{}),(0,c.jsx)(x.D,{}),(0,c.jsx)(i.$,{dataKey:"pv",stackId:"a",fill:"#4299E1"}),(0,c.jsx)(i.$,{dataKey:"uv",stackId:"a",fill:"#F04F47"})]})})},f=function(){return(0,c.jsx)(n.h,{width:"100%",height:200,children:(0,c.jsxs)(d,{data:l,margin:{top:10,right:0,left:-25,bottom:0},children:[(0,c.jsx)(s.K,{dataKey:"name"}),(0,c.jsx)(o.B,{}),(0,c.jsx)(m.q,{strokeDasharray:"3 3"}),(0,c.jsx)(p.u,{}),(0,c.jsx)(x.D,{}),(0,c.jsx)(i.$,{dataKey:"amt",stackId:"a",fill:"#4299E1"}),(0,c.jsx)(i.$,{dataKey:"pv",stackId:"a",fill:"#F04F47"}),(0,c.jsx)(i.$,{dataKey:"uv",fill:"#F04F47"})]})})},u=function(r,a,t,n){return"M".concat(r,",").concat(a+n,"\n          C").concat(r+t/3,",").concat(a+n," ").concat(r+t/2,",").concat(a+n/3," ").concat(r+t/2,", ").concat(a,"\n          C").concat(r+t/2,",").concat(a+n/3," ").concat(r+2*t/3,",").concat(a+n," ").concat(r+t,", ").concat(a+n,"\n          Z")},y=function(r){var a=r.fill,t=r.x,n=r.y,e=r.width,i=r.height;return(0,c.jsx)("path",{d:u(t,n,e,i),stroke:"none",fill:a})},C=function(){return(0,c.jsx)(n.h,{width:"100%",height:200,children:(0,c.jsxs)(d,{data:l,margin:{top:10,right:0,left:-25,bottom:0},children:[(0,c.jsx)(s.K,{dataKey:"name"}),(0,c.jsx)(o.B,{}),(0,c.jsx)(m.q,{strokeDasharray:"3 3"}),(0,c.jsx)(i.$,{dataKey:"uv",fill:"#4299E1",shape:(0,c.jsx)(y,{}),label:!0})]})})},B=t(94783),j=[{name:"Page A",uv:4e3,pv:2400,amt:2400},{name:"Page B",uv:-3e3,pv:1398,amt:2210},{name:"Page C",uv:-2e3,pv:-9800,amt:2290},{name:"Page D",uv:2780,pv:3908,amt:2e3},{name:"Page E",uv:-1890,pv:4800,amt:2181},{name:"Page F",uv:2390,pv:-3800,amt:2500},{name:"Page G",uv:3490,pv:4300,amt:2100}],k=function(){return(0,c.jsx)(n.h,{width:"100%",height:200,children:(0,c.jsxs)(d,{data:j,margin:{top:10,right:0,left:-25,bottom:0},children:[(0,c.jsx)(s.K,{dataKey:"name"}),(0,c.jsx)(o.B,{}),(0,c.jsx)(m.q,{strokeDasharray:"3 3"}),(0,c.jsx)(p.u,{}),(0,c.jsx)(x.D,{}),(0,c.jsx)(B.d,{y:0,stroke:"#000"}),(0,c.jsx)(i.$,{dataKey:"pv",fill:"#4299E1"}),(0,c.jsx)(i.$,{dataKey:"uv",fill:"#F04F47"})]})})},A=[{name:"Page A",uv:4e3,pv:2400,amt:2400},{name:"Page B",uv:-3e3,pv:1398,amt:2210},{name:"Page C",uv:-2e3,pv:-9800,amt:2290},{name:"Page D",uv:2780,pv:3908,amt:2e3},{name:"Page E",uv:-1890,pv:4800,amt:2181},{name:"Page F",uv:2390,pv:-3800,amt:2500},{name:"Page G",uv:3490,pv:4300,amt:2100}],K=function(){return(0,c.jsx)(n.h,{width:"100%",height:200,children:(0,c.jsxs)(d,{data:A,stackOffset:"sign",margin:{top:10,right:0,left:-25,bottom:0},children:[(0,c.jsx)(s.K,{dataKey:"name"}),(0,c.jsx)(o.B,{}),(0,c.jsx)(m.q,{strokeDasharray:"3 3"}),(0,c.jsx)(p.u,{}),(0,c.jsx)(x.D,{}),(0,c.jsx)(B.d,{y:0,stroke:"#000"}),(0,c.jsx)(i.$,{dataKey:"pv",fill:"#4299E1",stackId:"stack"}),(0,c.jsx)(i.$,{dataKey:"uv",fill:"#F04F47",stackId:"stack"})]})})},P=function(){return(0,c.jsx)(n.h,{width:"100%",height:200,children:(0,c.jsxs)(d,{data:l,margin:{top:10,right:0,left:-25,bottom:0},children:[(0,c.jsx)(s.K,{dataKey:"name"}),(0,c.jsx)(o.B,{yAxisId:"left",orientation:"left",stroke:"#03275b"}),(0,c.jsx)(o.B,{yAxisId:"right",orientation:"right",stroke:"#F04F47"}),(0,c.jsx)(m.q,{strokeDasharray:"3 3"}),(0,c.jsx)(p.u,{}),(0,c.jsx)(x.D,{}),(0,c.jsx)(i.$,{yAxisId:"left",dataKey:"pv",fill:"#4299E1"}),(0,c.jsx)(i.$,{yAxisId:"right",dataKey:"uv",fill:"#F04F47"})]})})},F=t(38081),R=t(66398),T=t(61708),$=t(2677),w=function(){return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(R.Z,{title:"Bar Chart",description:"All svg elements can be added into the BarChart component, such as defs, linearGradient, etc.",refUrl:"http://recharts.org/en-US/api/BarChart/"}),(0,c.jsxs)(T.Z,{children:[(0,c.jsx)($.Z,{xs:12,xl:6,children:(0,c.jsx)(F.Z,{title:"Tiny Bar Chart",component:v,source:"import React from 'react';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst TinyBarChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Bar dataKey='pv' fill='#4299E1' />\r\n      <Bar dataKey='uv' fill='#F04F47' />\r\n    </BarChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default TinyBarChart;\r\n"})}),(0,c.jsx)($.Z,{xs:12,xl:6,children:(0,c.jsx)(F.Z,{title:"Stacked Bar Chart",component:g,source:"import React from 'react';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst StackedBarChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Bar dataKey='pv' stackId='a' fill='#4299E1' />\r\n      <Bar dataKey='uv' stackId='a' fill='#F04F47' />\r\n    </BarChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default StackedBarChart;\r\n"})}),(0,c.jsx)($.Z,{xs:12,xl:6,children:(0,c.jsx)(F.Z,{title:"Mix Bar Chart",component:f,source:"import React from 'react';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst MixBarChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Bar dataKey='amt' stackId='a' fill='#4299E1' />\r\n      <Bar dataKey='pv' stackId='a' fill='#F04F47' />\r\n      <Bar dataKey='uv' fill='#F04F47' />\r\n    </BarChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default MixBarChart;\r\n"})}),(0,c.jsx)($.Z,{xs:12,xl:6,children:(0,c.jsx)(F.Z,{title:"Custom Shape Bar Chart",component:C,source:"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst getPath = (x, y, width, height) => {\r\n  return `M${x},${y + height}\r\n          C${x + width / 3},${y + height} ${x + width / 2},${y + height / 3} ${\r\n    x + width / 2\r\n  }, ${y}\r\n          C${x + width / 2},${y + height / 3} ${x + (2 * width) / 3},${\r\n    y + height\r\n  } ${x + width}, ${y + height}\r\n          Z`;\r\n};\r\n\r\nconst TriangleBar = (props) => {\r\n  const {fill, x, y, width, height} = props;\r\n\r\n  return <path d={getPath(x, y, width, height)} stroke='none' fill={fill} />;\r\n};\r\n\r\nTriangleBar.propTypes = {\r\n  fill: PropTypes.string,\r\n  x: PropTypes.number,\r\n  y: PropTypes.number,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number,\r\n};\r\nconst CustomShapeBarChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Bar dataKey='uv' fill='#4299E1' shape={<TriangleBar />} label />\r\n    </BarChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default CustomShapeBarChart;\r\n"})}),(0,c.jsx)($.Z,{xs:12,xl:6,children:(0,c.jsx)(F.Z,{title:"Positive And Negative Bar Chart",component:k,source:"import React from 'react';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Legend,\r\n  ReferenceLine,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},\r\n  {name: 'Page B', uv: -3000, pv: 1398, amt: 2210},\r\n  {name: 'Page C', uv: -2000, pv: -9800, amt: 2290},\r\n  {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},\r\n  {name: 'Page E', uv: -1890, pv: 4800, amt: 2181},\r\n  {name: 'Page F', uv: 2390, pv: -3800, amt: 2500},\r\n  {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},\r\n];\r\n\r\nconst PositiveAndNegativeBarChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <ReferenceLine y={0} stroke='#000' />\r\n      <Bar dataKey='pv' fill='#4299E1' />\r\n      <Bar dataKey='uv' fill='#F04F47' />\r\n    </BarChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default PositiveAndNegativeBarChart;\r\n"})}),(0,c.jsx)($.Z,{xs:12,xl:6,children:(0,c.jsx)(F.Z,{title:"Bar Chart Stacked By Sign",component:K,source:"import React from 'react';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Legend,\r\n  ReferenceLine,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},\r\n  {name: 'Page B', uv: -3000, pv: 1398, amt: 2210},\r\n  {name: 'Page C', uv: -2000, pv: -9800, amt: 2290},\r\n  {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},\r\n  {name: 'Page E', uv: -1890, pv: 4800, amt: 2181},\r\n  {name: 'Page F', uv: 2390, pv: -3800, amt: 2500},\r\n  {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},\r\n];\r\n\r\nconst BarChartStackedBySign = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <BarChart\r\n      data={data}\r\n      stackOffset='sign'\r\n      margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <ReferenceLine y={0} stroke='#000' />\r\n      <Bar dataKey='pv' fill='#4299E1' stackId='stack' />\r\n      <Bar dataKey='uv' fill='#F04F47' stackId='stack' />\r\n    </BarChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default BarChartStackedBySign;\r\n"})}),(0,c.jsx)($.Z,{xs:12,xl:6,children:(0,c.jsx)(F.Z,{title:"Biaxial Bar Chart",component:P,source:"import React from 'react';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst BiaxialBarChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis yAxisId='left' orientation='left' stroke='#03275b' />\r\n      <YAxis yAxisId='right' orientation='right' stroke='#F04F47' />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Bar yAxisId='left' dataKey='pv' fill='#4299E1' />\r\n      <Bar yAxisId='right' dataKey='uv' fill='#F04F47' />\r\n    </BarChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default BiaxialBarChart;\r\n"})})]})]})}}}]);
//# sourceMappingURL=3596.2eb4fd0a.chunk.js.map